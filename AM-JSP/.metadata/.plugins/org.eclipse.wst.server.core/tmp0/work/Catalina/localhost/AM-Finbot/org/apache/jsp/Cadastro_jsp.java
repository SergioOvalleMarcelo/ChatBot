/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2018-09-24 13:35:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Cadastro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>FINBOT CADASTRO</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/Cadastro.css\">\r\n");
      out.write("  <link rel=\"icon\" href=\"image/favicon2.ico\">\r\n");
      out.write("</head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <div class=\"loginbox\">\r\n");
      out.write("           <img src=\"image/avatar.png\" class=\"avatar\">\r\n");
      out.write("           <h1>Inicie seu Cadastro</h1>\r\n");
      out.write("           <form action=\"\" method=\"POST\">\r\n");
      out.write("               <p>Nome completo</p>\r\n");
      out.write("               <input id=\"validaNome\" type=\"text\" name=\"txtName\" placeholder=\"Informe seu nome completo\">\r\n");
      out.write("               <p>CPF</p>\r\n");
      out.write("               <input id=\"validaCPF\"type=\"text\" name=\"txtSenha\" placeholder=\"Informe seu CPF\">\r\n");
      out.write("               <p>Estado</p>\r\n");
      out.write("               <input id=\"validaEstado\"type=\"text\" name=\"txtSenha\" placeholder=\"Informe seu estado\">\r\n");
      out.write("               <p>Cidade</p>\r\n");
      out.write("               <input id=\"validaCidade\"type=\"text\" name=\"txtSenha\" placeholder=\"Informe sua cidade\">\r\n");
      out.write("               <p>Data de Nascimento</p>\r\n");
      out.write("               <input id=\"validaDataNascimento\"type=\"date\" name=\"txtSenha\" placeholder=\"Informe sua data de nascimento\">\r\n");
      out.write("               <p>Sexo</p>\r\n");
      out.write("               <input id=\"validaSexo\"type=\"text\" name=\"txtSenha\" placeholder=\"Informe seu Sexo\">\r\n");
      out.write("               <p>Email</p>\r\n");
      out.write("               <input id=\"validaEmail\"type=\"email\" name=\"txtSenha\" placeholder=\"Informe seu Email\">\r\n");
      out.write("               <p>Senha</p>\r\n");
      out.write("               <input id=\"validaSenha\"type=\"password\" name=\"txtSenha\" placeholder=\"Informe sua senha\">\r\n");
      out.write("               <p>Confirma Senha</p>\r\n");
      out.write("               <input id=\"validaConfirmaSenha\"type=\"password\" name=\"txtSenha\" placeholder=\"Confirme sua senha\">\r\n");
      out.write("               <input id=\"analiza\" type=\"button\" name=\"enviaCadastro\" value=\"Verifica Informações\">\r\n");
      out.write("               <input id=\"enviar\"type=\"submit\" onclick=\"enviaForm\" name=\"enviaCadastro\" value=\"Cadastar\">\r\n");
      out.write("\r\n");
      out.write("               <p class=\"linkQualquer\">  <a href=\"login.jsp\"> Voltar para o Login!</a> </p>\r\n");
      out.write("               <p class=\"linkQualquer\">  <a href=\"index.jsp\"> Voltar para o Site!</a></p>\r\n");
      out.write("           </form>\r\n");
      out.write("       </div>\r\n");
      out.write("\r\n");
      out.write("      <script type=\"text/javascript\" src=\"js/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("      <script type=\"text/javascript\" src=\"js/cadastro.js\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
